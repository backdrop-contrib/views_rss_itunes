<?php

/**
 * @file
 * Provides iTunes namespace, <channel> and <item> elements for Views RSS module.
 */

/**
 * Module installation path.
 */
define('VIEWS_RSS_ITUNES_PATH', drupal_get_path('module', 'views_rss_itunes'));

/**
 * Include file with all preprocess functions.
 */
include_once VIEWS_RSS_ITUNES_PATH .'/views_rss_itunes.inc';

/**
 * Implements hook_views_rss_namespaces().
 */
function views_rss_itunes_views_rss_namespaces() {
  $namespaces['itunes'] = array(
    'prefix' => 'xmlns',
    'uri' => 'http://www.itunes.com/dtds/podcast-1.0.dtd',
  );
  return $namespaces;
}

/**
 * Implements hook_views_rss_channel_elements().
 */
function views_rss_itunes_views_rss_channel_elements() {
  $elements['itunes:subtitle'] = array(
    'description' => t('The contents of this tag are shown in the Description column in iTunes. The subtitle displays best if it is only a few words long.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#subtitle',
  );
  $elements['itunes:summary'] = array(
    'settings form' => array('#type' => 'textarea', '#rows' => 3),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'description' => t('The contents of this tag are shown in a separate window that appears when the "circled i" in the Description column is clicked. It also appears on the iTunes page for your podcast. This field can be up to 4000 characters. If &lt;itunes:summary&gt; is not included, the contents of the &lt;description&gt; tag are used.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#summary',
  );
  $elements['itunes:category'] = array(
    'description' => t('Category column and in iTunes Store Browse.'),
    'settings form' => array('#type' => 'select', '#multiple' => TRUE, '#size' => 3),
    'settings form options callback' => 'views_rss_itunes_get_category_options',
    'preprocess functions' => array('views_rss_itunes_preprocess_channel_category'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#category',
  );
  $elements['itunes:keywords'] = array(
    'description' => t('This tag allows users to search on a maximum of 12 text keywords. Use commas to separate keywords. Not visible in iTunes.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#keywords',
  );
  $elements['itunes:image'] = array(
    'description' => t('This tag specifies the artwork for your podcast. iTunes prefers square .jpg images that are at least 600 x 600 pixels. iTunes supports images in JPEG and PNG formats with a RGB color space (CMYK is not supported). If the tag is not present, iTunes will use the contents of the RSS &lt;image&gt; tag.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#image',
  );
  $elements['itunes:author'] = array(
    'description' => t('The content of this tag is shown in the Artist column in iTunes. If the tag is not present, iTunes uses the contents of the &lt;author&gt; tag. If &lt;itunes:author&gt; is not present at the feed level, iTunes will use the contents of &lt;managingEditor&gt;.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#author',
  );
  $elements['itunes:explicit'] = array(
    'settings form' => array(
      '#type' => 'select',
      '#options' => array('', 'yes', 'no', 'clean'),
    ),
    'description' => t('This tag should be used to indicate whether or not your podcast contains explicit material.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#explicit',
  );
  $elements['itunes:block'] = array(
    'settings form' => array(
      '#type' => 'select',
      '#options' => array('', 'yes', 'no'),
    ),
    'description' => t('If this tag is present and set to "yes", that means to block the feed. If the tag\'s value is any other value, including empty string, it\'s indicated as a signal to unblock the feed. If there is no block tag, then the block status of the feed is left unchanged.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#block',
  );
  $elements['itunes:complete'] = array(
    'settings form' => array(
      '#type' => 'select',
      '#options' => array('', 'yes', 'no'),
    ),
    'description' => t('This tag can be used to indicate the completion of a podcast. If you populate this tag with "yes", you are indicating that no more episodes will be added to the podcast. If the &lt;itunes:complete&gt; tag is present and has any other value (e.g. "no"), it will have no effect on the podcast.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#complete',
  );
  $elements['itunes:new-feed-url'] = array(
    'description' => t('This tag allows you to change the URL where the podcast feed is located. After adding the tag to your old feed, you should maintain the old feed for 48 hours before retiring it. At that point, iTunes will have updated the directory with the new feed URL.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#newfeed',
  );
  $elements['itunes:owner'] = array(
    'description' => t('This tag contains information that will be used to contact the owner of the podcast for communication specifically about their podcast. It will not be publicly displayed. Enter owner\'s email address followed by their name, separating them with comma.'),
    'preprocess functions' => array('views_rss_itunes_preprocess_channel_owner'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#owner',
  );
  return $elements;
}

/**
 * Implements hook_views_rss_item_elements().
 */
function views_rss_itunes_views_rss_item_elements() {
  $elements['itunes:subtitle'] = array(
    'description' => t('The contents of this tag are shown in the Description column in iTunes. The subtitle displays best if it is only a few words long.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#subtitle',
  );
  $elements['itunes:summary'] = array(
    'description' => t('The contents of this tag are shown in a separate window that appears when the "circled i" in the Description column is clicked. It also appears on the iTunes page for your podcast. This field can be up to 4000 characters. If &lt;itunes:summary&gt; is not included, the contents of the &lt;description&gt; tag are used.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#summary',
  );
  $elements['itunes:duration'] = array(
    'description' => t('The content of this tag is shown in the Time column in iTunes.'),
    'theme' => FALSE,
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#duration',
  );
  $elements['itunes:keywords'] = array(
    'description' => t('This tag allows users to search on a maximum of 12 text keywords. Use commas to separate keywords. Not visible in iTunes.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#keywords',
  );
  $elements['itunes:image'] = array(
    'description' => t('This tag specifies the artwork for your podcast. iTunes prefers square .jpg images that are at least 600 x 600 pixels. iTunes supports images in JPEG and PNG formats with a RGB color space (CMYK is not supported). If the tag is not present, iTunes will use the contents of the RSS &lt;image&gt; tag.'),
    'theme' => FALSE,
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#image',
  );
  $elements['itunes:author'] = array(
    'description' => t('The content of this tag is shown in the Artist column in iTunes. If the tag is not present, iTunes uses the contents of the &lt;author&gt; tag. If &lt;itunes:author&gt; is not present at the feed level, iTunes will use the contents of &lt;managingEditor&gt;.'),
    'preprocess functions' => array('views_rss_htmlspecialchars'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#author',
  );
  $elements['itunes:isClosedCaptioned'] = array(
    'description' => t('This tag should be used if your podcast includes a video episode with embedded closed captioning support. The two values for this tag are "yes" and "no".'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#isClosedCaptioned',
  );
  $elements['itunes:explicit'] = array(
    'description' => t('This tag should be used to indicate whether or not your podcast contains explicit material.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#explicit',
  );
  $elements['itunes:block'] = array(
    'description' => t('If this tag is present and set to "yes", that means to block the episode. If the tag\'s value is any other value, including empty string, it\'s indicated as a signal to unblock the episode. If there is no block tag, it is the same as if a block=no were present.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#block',
  );
  $elements['itunes:order'] = array(
    'description' => t('This tag can be used to override the default ordering of episodes on the store. This tag is used at an &lt;item&gt; level by populating with the number value in which you would like the episode to appear on the store.'),
    'help' => 'http://www.apple.com/itunes/podcasts/specs.html#order',
  );
  return $elements;
}

/**
 * Implements hook_field_formatter_info().
 */
function views_rss_itunes_field_formatter_info() {
  $formatters = array(
    'itunes:duration' => array(
      'label' => t('RSS <itunes:duration> element'),
      'field types' => array('file'),
    ),
    'itunes:image' => array(
      'label' => t('RSS <itunes:image> element'),
      'field types' => array('image'),
    ),
  );
  return $formatters;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function views_rss_itunes_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  if ($field['type'] == 'image') {
    $image_styles = image_style_options(FALSE);
    $element['image_style'] = array(
      '#title' => t('Image style'),
      '#type' => 'select',
      '#default_value' => $settings['image_style'],
      '#empty_option' => t('None (original image)'),
      '#options' => $image_styles,
    );
  }
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function views_rss_itunes_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = array();
  if ($field['type'] == 'image') {
    $image_styles = image_style_options(FALSE);
    // Unset possible 'No defined styles' option.
    unset($image_styles['']);
    // Styles could be lost because of enabled/disabled modules that defines
    // their styles in code.
    if (isset($image_styles[$settings['image_style']])) {
      $summary[] = t('RSS &lt;itunes:image&gt; element: @style', array('@style' => $image_styles[$settings['image_style']]));
    }
    else {
      $summary[] = t('RSS &lt;itunes:image&gt; element');
    }
  }
  return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_view().
 */
function views_rss_itunes_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  foreach ($items as $delta => $item) {
    $element[$delta] = array(
      '#theme' => 'views_view_views_rss_field',
      '#element' => $display['type'],
    );
    switch ($element[$delta]['#element']) {
      case 'itunes:duration':
        $file_info = views_rss_itunes_get_file_info($item['uri']);
        $element[$delta]['#value'] = $file_info['playtime_string'];
        break;
      case 'itunes:image':
        if ($field['type'] == 'image') {
          if (!empty($display['settings']['image_style'])) {
            $element[$delta]['#arguments']['href'] = image_style_url($display['settings']['image_style'], $item['uri']);
          }
          else {
            $element[$delta]['#arguments']['href'] = file_create_url($item['uri']);
          }
        }
        break;
    }
  }
  return $element;
}
